{"remainingRequest":"E:\\platzi\\MINTIC_curso-de-machine-learning-para-analisis-predicitivo\\fabrica-memes\\node_modules\\babel-loader\\lib\\index.js!E:\\platzi\\MINTIC_curso-de-machine-learning-para-analisis-predicitivo\\fabrica-memes\\node_modules\\vuetify\\lib\\util\\color\\transformSRGB.js","dependencies":[{"path":"E:\\platzi\\MINTIC_curso-de-machine-learning-para-analisis-predicitivo\\fabrica-memes\\node_modules\\vuetify\\lib\\util\\color\\transformSRGB.js","mtime":1572028888607},{"path":"E:\\platzi\\MINTIC_curso-de-machine-learning-para-analisis-predicitivo\\fabrica-memes\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1572028745598},{"path":"E:\\platzi\\MINTIC_curso-de-machine-learning-para-analisis-predicitivo\\fabrica-memes\\node_modules\\babel-loader\\lib\\index.js","mtime":1572028741166}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY2xhbXAgfSBmcm9tICcuLi8uLi91dGlsL2hlbHBlcnMnOyAvLyBGb3IgY29udmVydGluZyBYWVogdG8gc1JHQgoKY29uc3Qgc3JnYkZvcndhcmRNYXRyaXggPSBbWzMuMjQwNiwgLTEuNTM3MiwgLTAuNDk4Nl0sIFstMC45Njg5LCAxLjg3NTgsIDAuMDQxNV0sIFswLjA1NTcsIC0wLjIwNDAsIDEuMDU3MF1dOyAvLyBGb3J3YXJkIGdhbW1hIGFkanVzdAoKY29uc3Qgc3JnYkZvcndhcmRUcmFuc2Zvcm0gPSBDID0+IEMgPD0gMC4wMDMxMzA4ID8gQyAqIDEyLjkyIDogMS4wNTUgKiBDICoqICgxIC8gMi40KSAtIDAuMDU1OyAvLyBGb3IgY29udmVydGluZyBzUkdCIHRvIFhZWgoKCmNvbnN0IHNyZ2JSZXZlcnNlTWF0cml4ID0gW1swLjQxMjQsIDAuMzU3NiwgMC4xODA1XSwgWzAuMjEyNiwgMC43MTUyLCAwLjA3MjJdLCBbMC4wMTkzLCAwLjExOTIsIDAuOTUwNV1dOyAvLyBSZXZlcnNlIGdhbW1hIGFkanVzdAoKY29uc3Qgc3JnYlJldmVyc2VUcmFuc2Zvcm0gPSBDID0+IEMgPD0gMC4wNDA0NSA/IEMgLyAxMi45MiA6ICgoQyArIDAuMDU1KSAvIDEuMDU1KSAqKiAyLjQ7CgpleHBvcnQgZnVuY3Rpb24gZnJvbVhZWih4eXopIHsKICBjb25zdCByZ2IgPSBBcnJheSgzKTsKICBjb25zdCB0cmFuc2Zvcm0gPSBzcmdiRm9yd2FyZFRyYW5zZm9ybTsKICBjb25zdCBtYXRyaXggPSBzcmdiRm9yd2FyZE1hdHJpeDsgLy8gTWF0cml4IHRyYW5zZm9ybSwgdGhlbiBnYW1tYSBhZGp1c3RtZW50CgogIGZvciAobGV0IGkgPSAwOyBpIDwgMzsgKytpKSB7CiAgICByZ2JbaV0gPSBNYXRoLnJvdW5kKGNsYW1wKHRyYW5zZm9ybShtYXRyaXhbaV1bMF0gKiB4eXpbMF0gKyBtYXRyaXhbaV1bMV0gKiB4eXpbMV0gKyBtYXRyaXhbaV1bMl0gKiB4eXpbMl0pKSAqIDI1NSk7CiAgfSAvLyBSZXNjYWxlIGJhY2sgdG8gWzAsIDI1NV0KCgogIHJldHVybiAocmdiWzBdIDw8IDE2KSArIChyZ2JbMV0gPDwgOCkgKyAocmdiWzJdIDw8IDApOwp9CmV4cG9ydCBmdW5jdGlvbiB0b1hZWihyZ2IpIHsKICBjb25zdCB4eXogPSBbMCwgMCwgMF07CiAgY29uc3QgdHJhbnNmb3JtID0gc3JnYlJldmVyc2VUcmFuc2Zvcm07CiAgY29uc3QgbWF0cml4ID0gc3JnYlJldmVyc2VNYXRyaXg7IC8vIFJlc2NhbGUgZnJvbSBbMCwgMjU1XSB0byBbMCwgMV0gdGhlbiBhZGp1c3Qgc1JHQiBnYW1tYSB0byBsaW5lYXIgUkdCCgogIGNvbnN0IHIgPSB0cmFuc2Zvcm0oKHJnYiA+PiAxNiAmIDB4ZmYpIC8gMjU1KTsKICBjb25zdCBnID0gdHJhbnNmb3JtKChyZ2IgPj4gOCAmIDB4ZmYpIC8gMjU1KTsKICBjb25zdCBiID0gdHJhbnNmb3JtKChyZ2IgPj4gMCAmIDB4ZmYpIC8gMjU1KTsgLy8gTWF0cml4IGNvbG9yIHNwYWNlIHRyYW5zZm9ybQoKICBmb3IgKGxldCBpID0gMDsgaSA8IDM7ICsraSkgewogICAgeHl6W2ldID0gbWF0cml4W2ldWzBdICogciArIG1hdHJpeFtpXVsxXSAqIGcgKyBtYXRyaXhbaV1bMl0gKiBiOwogIH0KCiAgcmV0dXJuIHh5ejsKfQ=="},{"version":3,"sources":["E:/platzi/MINTIC_curso-de-machine-learning-para-analisis-predicitivo/fabrica-memes/node_modules/vuetify/lib/util/color/transformSRGB.js"],"names":["clamp","srgbForwardMatrix","srgbForwardTransform","C","srgbReverseMatrix","srgbReverseTransform","fromXYZ","xyz","rgb","Array","transform","matrix","i","Math","round","toXYZ","r","g","b"],"mappings":"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","sourcesContent":["import { clamp } from '../../util/helpers'; // For converting XYZ to sRGB\r\n\r\nconst srgbForwardMatrix = [[3.2406, -1.5372, -0.4986], [-0.9689, 1.8758, 0.0415], [0.0557, -0.2040, 1.0570]]; // Forward gamma adjust\r\n\r\nconst srgbForwardTransform = C => C <= 0.0031308 ? C * 12.92 : 1.055 * C ** (1 / 2.4) - 0.055; // For converting sRGB to XYZ\r\n\r\n\r\nconst srgbReverseMatrix = [[0.4124, 0.3576, 0.1805], [0.2126, 0.7152, 0.0722], [0.0193, 0.1192, 0.9505]]; // Reverse gamma adjust\r\n\r\nconst srgbReverseTransform = C => C <= 0.04045 ? C / 12.92 : ((C + 0.055) / 1.055) ** 2.4;\r\n\r\nexport function fromXYZ(xyz) {\r\n  const rgb = Array(3);\r\n  const transform = srgbForwardTransform;\r\n  const matrix = srgbForwardMatrix; // Matrix transform, then gamma adjustment\r\n\r\n  for (let i = 0; i < 3; ++i) {\r\n    rgb[i] = Math.round(clamp(transform(matrix[i][0] * xyz[0] + matrix[i][1] * xyz[1] + matrix[i][2] * xyz[2])) * 255);\r\n  } // Rescale back to [0, 255]\r\n\r\n\r\n  return (rgb[0] << 16) + (rgb[1] << 8) + (rgb[2] << 0);\r\n}\r\nexport function toXYZ(rgb) {\r\n  const xyz = [0, 0, 0];\r\n  const transform = srgbReverseTransform;\r\n  const matrix = srgbReverseMatrix; // Rescale from [0, 255] to [0, 1] then adjust sRGB gamma to linear RGB\r\n\r\n  const r = transform((rgb >> 16 & 0xff) / 255);\r\n  const g = transform((rgb >> 8 & 0xff) / 255);\r\n  const b = transform((rgb >> 0 & 0xff) / 255); // Matrix color space transform\r\n\r\n  for (let i = 0; i < 3; ++i) {\r\n    xyz[i] = matrix[i][0] * r + matrix[i][1] * g + matrix[i][2] * b;\r\n  }\r\n\r\n  return xyz;\r\n}\r\n//# sourceMappingURL=transformSRGB.js.map"]}]}